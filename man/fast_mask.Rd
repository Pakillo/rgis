% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fast_mask.R
\name{fast_mask}
\alias{fast_mask}
\title{Fast masking of raster values}
\usage{
fast_mask(ras = NULL, mask = NULL, inverse = FALSE, updatevalue = NA)
}
\arguments{
\item{ras}{Raster* object.}

\item{mask}{Raster* object or POLYGON/MULTIPOLYGON \code{\link[sf:sf]{sf::sf()}} object.}

\item{inverse}{Logical. If TRUE, areas in \code{mask} that are \emph{not} NA are masked}

\item{updatevalue}{Convert all masked cells in \code{ras} to this value (default is NA)}
}
\value{
Raster* object
}
\description{
This is a fast implementation of \code{\link[raster:mask]{raster::mask()}} (actually using \code{\link[raster:overlay]{raster::overlay()}} inside). It masks values in a Raster object according to values in another Raster or polygon layer. Note that this function might be slower than \code{\link[raster:mask]{raster::mask()}} sometimes when the mask is a Raster. Largest speed gains occur for polygon masks.
}
\examples{
library(raster)

size <- 100
ras <- raster(ncol = size, nrow = size, vals = rep(1, size*size))
msk <- raster(ncol = size, nrow = size, vals = runif(size*size))
msk[msk < 0.5] <- NA

# Using raster as mask

system.time(ras.masked <- raster::mask(ras, msk))
system.time(ras.masked <- fast_mask(ras, msk))

plot(ras)
plot(msk)
plot(ras.masked)


# Using polygon layer as mask

msk.sp <- as(msk, 'SpatialPolygonsDataFrame')
msk.sf <- sf::st_as_sf(msk.sp)
system.time(ras.masked <- raster::mask(ras, msk.sp))
system.time(ras.masked <- raster::mask(ras, msk.sf))
system.time(ras.masked <- fast_mask(ras, msk.sf))

}
\seealso{
\code{\link[raster:mask]{raster::mask()}}
}
